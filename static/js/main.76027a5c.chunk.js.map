{"version":3,"sources":["../../src/use-generic-queries.js","AddUserForm.js","UsersList.js","App.js","../../src/utils/standard-api.js","index.js"],"names":["requestTypes","invalidateQuery","queryKey","queryCache","defaultMutationConfig","silent","shouldInvalidate","useGenericQueries","api","genericEventsManager","isFetching","useIsFetching","useState","getDefaultMutationEvents","config","onSuccess","requestType","onError","onMutate","mutatedValue","active","query","previousValue","state","fetchRequest","a","setQueryHash","data","fetchOneRequest","createRequest","updateRequest","deleteRequest","useGenericMutation","requestFunc","genericConfig","useMutation","queryFunc","withDefaultMutationConfig","useQuery","enabled","id","AddForm","onSave","Form","useForm","form","layout","initialValues","first_name","last_name","email","onFinish","resetFields","Item","label","name","rules","required","message","type","htmlType","List","UsersList","onCreate","onDelete","direction","size","style","width","length","gutter","flex","header","itemLayout","bordered","rowKey","dataSource","renderItem","avatar","actions","onClick","icon","DeleteOutlined","shape","Meta","title","description","UserOutlined","src","span","AddUserForm","defaultProps","Text","Typography","ApiClient","axios","baseURL","validateStatus","status","success","error","App","apiDriver","entity","page","per_page","fetchQueryConfig","setFetchQueryConfig","fetch","params","fetchOne","create","body","update","delete","useFetch","useCreate","useDelete","users","total","mutateReducer","res","createUser","filter","entry","deleteUser","className","pageSize","current","showSizeChanger","onChange","code","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76027a5c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport {\n  useQuery, useMutation, useIsFetching, queryCache,\n} from 'react-query';\n\nconst requestTypes = {\n  fetch: 'FETCH',\n  create: 'CREATE',\n  update: 'UPDATE',\n  delete: 'DELETE',\n};\n\nconst invalidateQuery = (queryKey) => queryCache.invalidateQueries(queryKey);\n\nconst defaultMutationConfig = {\n  silent: false,\n  shouldInvalidate: true,\n};\n\nconst useGenericQueries = (queryKey, api, genericEventsManager) => {\n  const isFetching = !!useIsFetching([queryKey]);\n  const [queryHash, setQueryHash] = useState([queryKey]);\n\n  const getDefaultMutationEvents = (\n    requestType,\n    config = defaultMutationConfig,\n  ) => ({\n    onSuccess: () => {\n      const shouldInvalidate = requestType !== requestTypes.fetch\n      && config?.shouldInvalidate\n      && !config?.mutateReducer;\n\n      if (!config?.silent && genericEventsManager?.onSuccess) {\n        genericEventsManager.onSuccess(requestType, queryKey);\n      }\n\n      if (shouldInvalidate) {\n        invalidateQuery(queryKey);\n      }\n    },\n    onError: () => {\n      if (!config?.silent && genericEventsManager?.onError) {\n        genericEventsManager.onError(requestType, queryKey);\n        // Should throw err up?\n      }\n    },\n\n    /**\n     * For optimistic updates\n     */\n    onMutate: config?.mutateReducer\n      ? (mutatedValue) => {\n        queryCache.cancelQueries(queryKey, { active: true });\n        const query = queryCache.getQuery(queryHash);\n        if (query) {\n          const previousValue = queryCache.getQueryData(query.queryKey);\n          queryCache.setQueryData(\n            query.queryKey,\n            (state) => config.mutateReducer(state, mutatedValue) || previousValue,\n          );\n        }\n      }\n      : null,\n  });\n\n  const withDefaultMutationConfig = (requestType, queryFunc, config, genericConfig) => [\n    queryFunc,\n    {\n      ...getDefaultMutationEvents(requestType, genericConfig),\n      ...config,\n    },\n  ];\n\n  /**\n   * API requests\n   * @param {*} query\n   */\n  const fetchRequest = async (query) => {\n    setQueryHash([queryKey, query]);\n    const { data } = await api.fetch(query);\n    return data;\n  };\n\n  const fetchOneRequest = async (id) => api.fetchOne(id);\n\n  const createRequest = async (data) => api.create(data);\n\n  const updateRequest = async (data) => api.update(data);\n\n  const deleteRequest = async (data) => api.delete(data);\n\n  /**\n   * Universal queries\n   * @param {*} query\n   */\n\n  const useFetch = (query, config, genericConfig) => useQuery([queryKey, query],\n    () => fetchRequest(query), {\n      enabled: query,\n      ...getDefaultMutationEvents(requestTypes.fetch, {\n        ...genericConfig, shouldInvalidate: false,\n      }),\n      ...config,\n    });\n\n  const useFetchOne = (id, config, genericConfig) => useQuery([queryKey, id], () =>\n    fetchOneRequest(id), {\n    enabled: id,\n    ...getDefaultMutationEvents(requestTypes.fetch, {\n      ...genericConfig, shouldInvalidate: false,\n    }),\n    ...config,\n  });\n\n  /**\n   * Generic mutator\n   * @param {*} requestType format {RequestTypes}\n   * @param {*} requestFunc {Func}\n   * @param {*} config {Object}\n   */\n\n  const useGenericMutation = (requestType, requestFunc, config, genericConfig) =>\n    useMutation(...withDefaultMutationConfig(requestType, requestFunc, config, genericConfig));\n\n  /**\n   * Predefined mutations\n   */\n\n  const useCreate = (config, genericConfig) =>\n    useGenericMutation(requestTypes.create, createRequest, config, genericConfig);\n\n  const useUpdate = (config, genericConfig) =>\n    useGenericMutation(requestTypes.update, updateRequest, config, genericConfig);\n\n  const useDelete = (config, genericConfig) =>\n    useGenericMutation(requestTypes.delete, deleteRequest, config, genericConfig);\n\n  return {\n    isFetching,\n    useFetch,\n    useFetchOne,\n    useCreate,\n    useUpdate,\n    useDelete,\n    useGenericMutation,\n  };\n};\n\nexport default useGenericQueries;\n","import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\n\nconst AddForm = ({ onSave }) => {\n  const [form] = Form.useForm();\n\n  const resetFileds = () => form.resetFields();\n\n  const onFinish = (data) => {\n    onSave(data);\n    resetFileds();\n  };\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      initialValues={{ first_name: \"\", last_name: \"\", email: \"\" }}\n      onFinish={onFinish}\n    >\n      <Form.Item\n        label=\"First name\"\n        name=\"first_name\"\n        rules={[{ required: true, message: \"Please input your first name!\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Last name\"\n        name=\"last_name\"\n        rules={[{ required: true, message: \"Please input your last name!\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item label=\"Email\" name=\"email\" rules={[{ type: \"email\" }]}>\n        <Input />\n      </Form.Item>\n\n      <Button type=\"primary\" htmlType=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nexport default AddForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List, Avatar, Empty, Button, Space, Row, Col } from \"antd\";\nimport { DeleteOutlined, UserOutlined } from \"@ant-design/icons\";\nimport AddUserForm from './AddUserForm';\n\nconst { Item } = List;\n\nconst UsersList = ({ data, onCreate, onDelete }) => {\n  const renderItem = ({ first_name, last_name, email, avatar, id }) => (\n    <Item\n      actions={[\n        <Button\n          onClick={() => onDelete(id)}\n          icon={<DeleteOutlined />}\n          shape=\"circle\"\n        />\n      ]}\n    >\n      <Item.Meta\n        title={`${first_name} ${last_name}`}\n        description={email}\n        avatar={<Avatar icon={<UserOutlined />} src={avatar} />}\n      />\n    </Item>\n  );\n\nreturn   (\n  <Space direction=\"vertical\" size=\"large\" style={{ width: \"100%\" }}>\n    {!!data.length ? (\n      <Row gutter={32}>\n        <Col flex={1}>\n          <List\n            header=\"Users list\"\n            itemLayout=\"horizontal\"\n            bordered\n            rowKey=\"id\"\n            dataSource={data}\n            renderItem={renderItem}\n          />\n        </Col>\n        <Col span={8}>\n          <AddUserForm onSave={onCreate} />\n        </Col>\n      </Row>\n    ) : (\n      <Empty />\n    )}\n  </Space>\n);}\n\nUsersList.propTypes = {\n  data: PropTypes.array,\n  onCreate: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n};\n\nUsersList.defaultProps = {\n  data: []\n};\n\nexport default UsersList;\n\n","import React, { useState } from 'react'\nimport * as axios from 'axios';\nimport { ReactQueryDevtools } from 'react-query-devtools'\nimport { Typography, Pagination, message } from 'antd';\nimport { useGenericQueries, standardAPI } from 'react-query-generic-hook';\nimport UsersList from './UsersList';\nimport \"antd/dist/antd.css\";\n\nconst { Text } = Typography;\n\nconst ApiClient = axios.create({\n  baseURL: 'https://reqres.in/api/',\n  validateStatus: (status) => status >= 200 && status < 300,\n});\n\nconst genericEventsManager = {\n  onSuccess: (requestType, queryKey) => message.success(`${requestType} request succeed for query key \"${queryKey}\"`),\n  onError: (requestType, queryKey) => message.error(`${requestType} request failed for query key \"${queryKey}\"`),\n}\n\nconst App = () => {\n  const [fetchQueryConfig, setFetchQueryConfig] = useState({\n    page: 1,\n    per_page: 10\n  })\n  const { isFetching, useFetch, useCreate, useDelete } = useGenericQueries(\n      'users',\n      standardAPI(ApiClient, 'users'),\n      genericEventsManager\n  );\n\n  const { data: { data: users = [], page, total } = {} } = useFetch(fetchQueryConfig, null, {\n    silent: false,\n  });\n\n  const [createUser] = useCreate(null, {\n    // This is optional. Required for optimistic-updates support\n    mutateReducer: (state, res) => {\n      return {\n        ...state,\n        data: [res, ...state.data]\n      };\n    }\n  });\n\n  const [deleteUser] = useDelete(null, {\n    // This is optional. Required for optimistic-updates support\n    mutateReducer: (state, id) => {\n      return {\n        ...state,\n        data: state.data.filter((entry) => entry.id !== id)\n      };\n    }\n  });\n\n  const onCreate = (data) => createUser(data);\n\n  const onDelete = (id) => deleteUser(id);\n\n  const onPaginationChange = (page, per_page) =>\n    setFetchQueryConfig({\n      ...fetchQueryConfig,\n      page,\n      per_page\n    })\n\n    return (\n    <div className=\"app\">\n      <div className=\"pagination-box\">\n        <Pagination\n          pageSize={fetchQueryConfig.per_page}\n          current={page}\n          showSizeChanger\n          onChange={onPaginationChange}\n          total={total}\n        />\n        <br/>\n        <Text>\n          Any fetch in action for query key <Text code>users</Text>: {!!isFetching ? 'YES' : 'NO'}\n        </Text>\n      </div>\n      <UsersList\n        data={users}\n        onCreate={onCreate}\n        onDelete={onDelete}\n      />\n      <ReactQueryDevtools />\n    </div>\n  );\n}\n\nexport default App\n","const standardAPI = (apiDriver, entity) => ({\n  fetch: (query) => apiDriver.get(`${entity}/`, { params: query }),\n  fetchOne: (id) => apiDriver.get(`${entity}/${id}/`),\n  create: (body) => apiDriver.post(`${entity}/`, body),\n  update: (body) => apiDriver.put(`${entity}/${body.id}/`, body),\n  delete: (id) => apiDriver.delete(`${entity}/${id}/`),\n});\n\nexport default standardAPI;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}